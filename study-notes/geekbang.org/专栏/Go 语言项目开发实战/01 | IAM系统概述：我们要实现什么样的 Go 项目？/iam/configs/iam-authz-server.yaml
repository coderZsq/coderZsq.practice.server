# Copyright 2020 Lingfei Kong <colin404@foxmail.com>. All rights reserved.
# Use of this source code is governed by a MIT style
# license that can be found in the LICENSE file.

# iam-authz-server 全配置

# IAM rpc 服务地址
rpcserver: ${IAM_AUTHZ_SERVER_RPCSERVER} # iam-apiserver grpc 服务器地址和端口

# TLS客户端证书文件
client-ca-file: ${IAM_AUTHZ_SERVER_CLIENT_CA_FILE} # TLS 客户端证书，如果指定，则该客户端证书将被用于认证

# RESTful 服务配置
server:
    mode: debug # server mode: release, debug, test，默认release
    healthz: true # 是否开启健康检查，如果开启会安装 /healthz 路由，默认 true
    middlewares: recovery,logger,secure,nocache,cors,dump # 加载的 gin 中间件列表，多个中间件，逗号(,)隔开

# HTTP 配置
insecure:
    bind-address: ${IAM_AUTHZ_SERVER_INSECURE_BIND_ADDRESS} # 绑定的不安全 IP 地址，设置为 0.0.0.0 表示使用全部网络接口，默认为 127.0.0.1
    bind-port: ${IAM_AUTHZ_SERVER_INSECURE_BIND_PORT} # 提供非安全认证的监听端口，默认为 8080

# HTTPS 配置
secure:
    bind-address: ${IAM_AUTHZ_SERVER_SECURE_BIND_ADDRESS} # HTTPS 安全模式的 IP 地址，默认为 0.0.0.0
    bind-port: ${IAM_AUTHZ_SERVER_SECURE_BIND_PORT} # 使用 HTTPS 安全模式的端口号，设置为 0 表示不启用 HTTPS，默认为 8443
    tls:
        #cert-dir: .iam/cert # TLS 证书所在的目录，默认值为 /var/run/iam
        #pair-name: iam # TLS 私钥对名称，默认 iam
        cert-key:
            cert-file: ${IAM_AUTHZ_SERVER_SECURE_TLS_CERT_KEY_CERT_FILE} # 包含 x509 证书的文件路径，用 HTTPS 认证
            private-key-file: ${IAM_AUTHZ_SERVER_SECURE_TLS_CERT_KEY_PRIVATE_KEY_FILE} # TLS 私钥

# Redis 配置
redis:
  host: ${REDIS_HOST} # redis 地址，默认 127.0.0.1:6379
  port: ${REDIS_PORT} # redis 端口，默认 6379
  password: ${REDIS_PASSWORD} # redis 密码
  database: 0 # redis 数据库
  #addrs:
  #master-name: # redis 集群 master 名称
  #username: # redis 登陆用户名
  #optimisation-max-idle:  # redis 连接池中的最大空闲连接数
  #optimisation-max-active: # 最大活跃连接数
  #timeout: # 连接 redis 时的超时时间
  #enable-cluster: # 是否开启集群模式
  #use-ssl: # 是否启用 TLS
  #ssl-insecure-skip-verify: # 当连接 redis 时允许使用自签名证书

log:
    name: authzserver # Logger的名字
    development: true # 是否是开发模式。如果是开发模式，会对DPanicLevel进行堆栈跟踪。
    level: debug # 日志级别，优先级从低到高依次为：debug, info, warn, error, dpanic, panic, fatal。
    format: console # 支持的日志输出格式，目前支持console和json两种。console其实就是text格式。
    enable-color: true # 是否开启颜色输出，true:是，false:否
    disable-caller: false # 是否开启 caller，如果开启会在日志中显示调用日志所在的文件、函数和行号
    disable-stacktrace: false # 是否再panic及以上级别禁止打印堆栈信息
    output-paths: ${IAM_LOG_DIR}/iam-authz-server.log,stdout # 多个输出，逗号分开。stdout：标准输出，
    error-output-paths: ${IAM_LOG_DIR}/iam-authz-server.error.log # zap内部(非业务)错误日志输出路径，多个输出，逗号分开

analytics:
    enable: true # 设置为 true 后 iam-authz-server 会记录授权审计日志
    pool-size: 50 # 指定 worker 的个数，默认 50
    records-buffer-size:  2000 # 缓存的授权日志消息数
    flush-interval: 200 # 超时投递时间，单位：毫秒，0 < flush-interval <= 1000。
    enable-detailed-recording: true # 开启记录详情，详细记录的功能
    storage-expiration-time: 24h0m0s # key 过期时间

feature:
  enable-metrics: true # 开启 metrics, router:  /metrics
  profiling: true # 开启性能分析, 可以通过 <host>:<port>/debug/pprof/地址查看程序栈、线程等系统信息，默认值为 true
