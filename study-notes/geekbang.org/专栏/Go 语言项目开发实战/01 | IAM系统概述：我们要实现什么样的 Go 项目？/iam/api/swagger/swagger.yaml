# Copyright 2020 Lingfei Kong <colin404@foxmail.com>. All rights reserved.
# Use of this source code is governed by a MIT style
# license that can be found in the LICENSE file.

basePath: /v1
consumes:
- application/json
definitions:
  AuthzPolicy:
    properties:
      actions:
        items:
          type: string
        type: array
        x-go-name: Actions
      conditions:
        $ref: '#/definitions/Conditions'
      description:
        type: string
        x-go-name: Description
      effect:
        type: string
        x-go-name: Effect
      id:
        type: string
        x-go-name: ID
      meta:
        items:
          format: uint8
          type: integer
        type: array
        x-go-name: Meta
      resources:
        items:
          type: string
        type: array
        x-go-name: Resources
      subjects:
        items:
          type: string
        type: array
        x-go-name: Subjects
    title: AuthzPolicy defines iam policy type.
    type: object
    x-go-package: github.com/marmotedu/api/apiserver/v1
  ChangePasswordRequest:
    properties:
      newPassword:
        description: New password.
        type: string
        x-go-name: NewPassword
      oldPassword:
        description: Old password.
        type: string
        x-go-name: OldPassword
    required:
    - oldPassword
    - newPassword
    title: ChangePasswordRequest defines the ChangePasswordRequest data format.
    type: object
    x-go-package: github.com/marmotedu/iam/internal/apiserver/controller/v1/user
  Condition:
    properties:
      GetName:
        description: GetName returns the condition's name.
        type: string
    title: Condition either do or do not fulfill an access request.
    type: object
    x-go-package: github.com/ory/ladon
  Conditions:
    additionalProperties:
      $ref: '#/definitions/Condition'
    title: Conditions is a collection of conditions.
    type: object
    x-go-package: github.com/ory/ladon
  ErrResponse:
    description: Reference will be omitted if it does not exist.
    properties:
      code:
        description: Code defines the business error code.
        format: int64
        type: integer
        x-go-name: Code
      message:
        description: |-
          Message contains the detail of this message.
          This message is suitable to be exposed to external
        type: string
        x-go-name: Message
      reference:
        description: Reference returns the reference document which maybe useful to
          solve this error.
        type: string
        x-go-name: Reference
    title: ErrResponse defines the return messages when an error occurred.
    type: object
    x-go-package: github.com/marmotedu/component-base/pkg/core
  Extend:
    additionalProperties:
      type: object
    title: Extend defines a new type used to store extended fields.
    type: object
    x-go-package: github.com/marmotedu/component-base/pkg/meta/v1
  Policy:
    description: It is also used as gorm model.
    properties:
      createdAt:
        description: |-
          CreatedAt is a timestamp representing the server time when this object was
          created. It is not guaranteed to be set in happens-before order across separate operations.
          Clients may not set this value. It is represented in RFC3339 form and is in UTC.

          Populated by the system.
          Read-only.
          Null for lists.
        format: date-time
        type: string
        x-go-name: CreatedAt
      extend:
        $ref: '#/definitions/Extend'
      id:
        description: |-
          ID is the unique in time and space value for this object. It is typically generated by
          the storage on successful creation of a resource and is not allowed to change on PUT
          operations.

          Populated by the system.
          Read-only.
        format: uint64
        type: integer
        x-go-name: ID
      instanceID:
        description: |-
          InstanceID defines a string type resource identifier,
          use prefixed to distinguish resource types, easy to remember, Url-friendly.
        type: string
        x-go-name: InstanceID
      name:
        type: string
        x-go-name: Name
      policy:
        $ref: '#/definitions/AuthzPolicy'
      updatedAt:
        description: |-
          UpdatedAt is a timestamp representing the server time when this object was updated.
          Clients may not set this value. It is represented in RFC3339 form and is in UTC.

          Populated by the system.
          Read-only.
          Null for lists.
        format: date-time
        type: string
        x-go-name: UpdatedAt
      username:
        description: The user of the policy.
        type: string
        x-go-name: Username
    required:
    - name
    title: Policy represents a policy restful resource, include a ladon policy.
    type: object
    x-go-package: github.com/marmotedu/api/apiserver/v1
  PolicyList:
    properties:
      items:
        description: List of policies.
        items:
          $ref: '#/definitions/Policy'
        type: array
        x-go-name: Items
      totalCount:
        format: int64
        type: integer
        x-go-name: TotalCount
    title: PolicyList is the whole list of all policies which have been stored in
      stroage.
    type: object
    x-go-package: github.com/marmotedu/api/apiserver/v1
  Secret:
    description: It is also used as gorm model.
    properties:
      createdAt:
        description: |-
          CreatedAt is a timestamp representing the server time when this object was
          created. It is not guaranteed to be set in happens-before order across separate operations.
          Clients may not set this value. It is represented in RFC3339 form and is in UTC.

          Populated by the system.
          Read-only.
          Null for lists.
        format: date-time
        type: string
        x-go-name: CreatedAt
      description:
        type: string
        x-go-name: Description
      expires:
        format: int64
        type: integer
        x-go-name: Expires
      extend:
        $ref: '#/definitions/Extend'
      id:
        description: |-
          ID is the unique in time and space value for this object. It is typically generated by
          the storage on successful creation of a resource and is not allowed to change on PUT
          operations.

          Populated by the system.
          Read-only.
        format: uint64
        type: integer
        x-go-name: ID
      instanceID:
        description: |-
          InstanceID defines a string type resource identifier,
          use prefixed to distinguish resource types, easy to remember, Url-friendly.
        type: string
        x-go-name: InstanceID
      name:
        type: string
        x-go-name: Name
      secretID:
        type: string
        x-go-name: SecretID
      secretKey:
        type: string
        x-go-name: SecretKey
      updatedAt:
        description: |-
          UpdatedAt is a timestamp representing the server time when this object was updated.
          Clients may not set this value. It is represented in RFC3339 form and is in UTC.

          Populated by the system.
          Read-only.
          Null for lists.
        format: date-time
        type: string
        x-go-name: UpdatedAt
      username:
        type: string
        x-go-name: Username
    required:
    - name
    - expires
    title: Secret represents a secret restful resource.
    type: object
    x-go-package: github.com/marmotedu/api/apiserver/v1
  SecretList:
    properties:
      items:
        description: List of secrets
        items:
          $ref: '#/definitions/Secret'
        type: array
        x-go-name: Items
      totalCount:
        format: int64
        type: integer
        x-go-name: TotalCount
    title: SecretList is the whole list of all secrets which have been stored in stroage.
    type: object
    x-go-package: github.com/marmotedu/api/apiserver/v1
  User:
    properties:
      createdAt:
        description: |-
          CreatedAt is a timestamp representing the server time when this object was
          created. It is not guaranteed to be set in happens-before order across separate operations.
          Clients may not set this value. It is represented in RFC3339 form and is in UTC.

          Populated by the system.
          Read-only.
          Null for lists.
        format: date-time
        type: string
        x-go-name: CreatedAt
      email:
        type: string
        x-go-name: Email
      extend:
        $ref: '#/definitions/Extend'
      id:
        description: |-
          ID is the unique in time and space value for this object. It is typically generated by
          the storage on successful creation of a resource and is not allowed to change on PUT
          operations.

          Populated by the system.
          Read-only.
        format: uint64
        type: integer
        x-go-name: ID
      instanceID:
        description: |-
          InstanceID defines a string type resource identifier,
          use prefixed to distinguish resource types, easy to remember, Url-friendly.
        type: string
        x-go-name: InstanceID
      isAdmin:
        format: int64
        type: integer
        x-go-name: IsAdmin
      name:
        type: string
        x-go-name: Name
      nickname:
        type: string
        x-go-name: Nickname
      password:
        type: string
        x-go-name: Password
      phone:
        type: string
        x-go-name: Phone
      totalPolicy:
        format: int64
        type: integer
        x-go-name: TotalPolicy
      updatedAt:
        description: |-
          UpdatedAt is a timestamp representing the server time when this object was updated.
          Clients may not set this value. It is represented in RFC3339 form and is in UTC.

          Populated by the system.
          Read-only.
          Null for lists.
        format: date-time
        type: string
        x-go-name: UpdatedAt
    required:
    - name
    - nickname
    - password
    - email
    title: User represents a user restful resource. It is also used as gorm model.
    type: object
    x-go-package: github.com/marmotedu/api/apiserver/v1
  UserList:
    properties:
      items:
        items:
          $ref: '#/definitions/User'
        type: array
        x-go-name: Items
      totalCount:
        format: int64
        type: integer
        x-go-name: TotalCount
    title: UserList is the whole list of all users which have been stored in stroage.
    type: object
    x-go-package: github.com/marmotedu/api/apiserver/v1
host: iam.api.marmotedu.com
info:
  contact:
    email: colin404@foxmail.com
    name: Lingfei Kong
    url: http://marmotedu.com
  description: Identity and Access Management System.
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT
  title: IAM API Server API.
  version: 1.0.0
paths:
  /policies:
    delete:
      description: Batch delete policies according to input parameters.
      operationId: deletePolicyCollectionRequest
      parameters:
      - in: query
        items:
          type: string
        name: name
        type: array
        x-go-name: Names
      responses:
        "200":
          $ref: '#/responses/okResponse'
        default:
          $ref: '#/responses/errResponse'
      security:
      - api_key: []
      summary: Batch delete policies.
      tags:
      - policies
    get:
      description: List policies.
      operationId: listPolicyRequest
      parameters:
      - description: |-
          Kind is a string value representing the REST resource this object represents.
          Servers may infer this from the endpoint the client submits requests to.
          Cannot be updated.
          In CamelCase.
        in: query
        name: kind
        type: string
        x-go-name: Kind
      - description: |-
          APIVersion defines the versioned schema of this representation of an object.
          Servers should convert recognized schemas to the latest internal value, and
          may reject unrecognized values.
        in: query
        name: apiVersion
        type: string
        x-go-name: APIVersion
      - description: LabelSelector is used to find matching REST resources.
        in: query
        name: labelSelector
        type: string
        x-go-name: LabelSelector
      - description: FieldSelector restricts the list of returned objects by their
          fields. Defaults to everything.
        in: query
        name: fieldSelector
        type: string
        x-go-name: FieldSelector
      - description: TimeoutSeconds specifies the seconds of ClientIP type session
          sticky time.
        format: int64
        in: query
        name: timeoutSeconds
        type: integer
        x-go-name: TimeoutSeconds
      - description: Offset specify the number of records to skip before starting
          to return the records.
        format: int64
        in: query
        name: offset
        type: integer
        x-go-name: Offset
      - description: Limit specify the number of records to be retrieved.
        format: int64
        in: query
        name: limit
        type: integer
        x-go-name: Limit
      responses:
        "200":
          $ref: '#/responses/listPolicyResponse'
        default:
          $ref: '#/responses/errResponse'
      summary: List policies.
      tags:
      - policies
    post:
      description: Create policies according to input parameters.
      operationId: createPolicyRequest
      parameters:
      - description: Policy information.
        in: body
        name: Body
        schema:
          $ref: '#/definitions/Policy'
      responses:
        "200":
          $ref: '#/responses/createPolicyResponse'
        default:
          $ref: '#/responses/errResponse'
      security:
      - api_key: []
      summary: Create policies.
      tags:
      - policies
  /policies/{name}:
    delete:
      description: Delete policy according to input parameters.
      operationId: deletePolicyRequest
      parameters:
      - description: Policy name.
        in: path
        name: name
        required: true
        type: string
        x-go-name: Name
      responses:
        "200":
          $ref: '#/responses/okResponse'
        default:
          $ref: '#/responses/errResponse'
      security:
      - api_key: []
      summary: Delete policy.
      tags:
      - policies
    get:
      description: Get details for specified policy according to input parameters.
      operationId: getPolicyRequest
      parameters:
      - description: Policy name.
        in: path
        name: name
        required: true
        type: string
        x-go-name: Name
      responses:
        "200":
          $ref: '#/responses/getPolicyResponse'
        default:
          $ref: '#/responses/errResponse'
      summary: Get details for specified policy.
      tags:
      - policies
    put:
      description: Update policy according to input parameters.
      operationId: updatePolicyRequest
      parameters:
      - description: Policy information.
        in: body
        name: Body
        schema:
          $ref: '#/definitions/Policy'
      - description: Policy name.
        in: path
        name: name
        required: true
        type: string
        x-go-name: Name
      responses:
        "200":
          $ref: '#/responses/updatePolicyResponse'
        default:
          $ref: '#/responses/errResponse'
      security:
      - api_key: []
      summary: Update policy.
      tags:
      - policies
  /secrets:
    get:
      description: List secrets.
      operationId: listSecretRequest
      parameters:
      - description: |-
          Kind is a string value representing the REST resource this object represents.
          Servers may infer this from the endpoint the client submits requests to.
          Cannot be updated.
          In CamelCase.
        in: query
        name: kind
        type: string
        x-go-name: Kind
      - description: |-
          APIVersion defines the versioned schema of this representation of an object.
          Servers should convert recognized schemas to the latest internal value, and
          may reject unrecognized values.
        in: query
        name: apiVersion
        type: string
        x-go-name: APIVersion
      - description: LabelSelector is used to find matching REST resources.
        in: query
        name: labelSelector
        type: string
        x-go-name: LabelSelector
      - description: FieldSelector restricts the list of returned objects by their
          fields. Defaults to everything.
        in: query
        name: fieldSelector
        type: string
        x-go-name: FieldSelector
      - description: TimeoutSeconds specifies the seconds of ClientIP type session
          sticky time.
        format: int64
        in: query
        name: timeoutSeconds
        type: integer
        x-go-name: TimeoutSeconds
      - description: Offset specify the number of records to skip before starting
          to return the records.
        format: int64
        in: query
        name: offset
        type: integer
        x-go-name: Offset
      - description: Limit specify the number of records to be retrieved.
        format: int64
        in: query
        name: limit
        type: integer
        x-go-name: Limit
      responses:
        "200":
          $ref: '#/responses/listSecretResponse'
        default:
          $ref: '#/responses/errResponse'
      summary: List secrets.
      tags:
      - secrets
    post:
      description: Create secrets according to input parameters.
      operationId: createSecretRequest
      parameters:
      - description: Secret information.
        in: body
        name: Body
        schema:
          $ref: '#/definitions/Secret'
      responses:
        "200":
          $ref: '#/responses/createSecretResponse'
        default:
          $ref: '#/responses/errResponse'
      security:
      - api_key: []
      summary: Create secrets.
      tags:
      - secrets
  /secrets/{name}:
    delete:
      description: Delete secret according to input parameters.
      operationId: deleteSecretRequest
      parameters:
      - description: Secret name.
        in: path
        name: name
        required: true
        type: string
        x-go-name: Name
      responses:
        "200":
          $ref: '#/responses/okResponse'
        default:
          $ref: '#/responses/errResponse'
      security:
      - api_key: []
      summary: Delete secret.
      tags:
      - secrets
    get:
      description: Get details for specified secret according to input parameters.
      operationId: getSecretRequest
      parameters:
      - description: Secret name.
        in: path
        name: name
        required: true
        type: string
        x-go-name: Name
      responses:
        "200":
          $ref: '#/responses/getSecretResponse'
        default:
          $ref: '#/responses/errResponse'
      summary: Get details for specified secret.
      tags:
      - secrets
    put:
      description: Update secret according to input parameters.
      operationId: updateSecretRequest
      parameters:
      - description: Secret information.
        in: body
        name: Body
        schema:
          $ref: '#/definitions/Secret'
      - description: Secret name.
        in: path
        name: name
        required: true
        type: string
        x-go-name: Name
      responses:
        "200":
          $ref: '#/responses/updateSecretResponse'
        default:
          $ref: '#/responses/errResponse'
      security:
      - api_key: []
      summary: Update secret.
      tags:
      - secrets
  /users:
    delete:
      description: Delete users
      operationId: deleteUserCollectionRequest
      parameters:
      - in: query
        items:
          type: string
        name: name
        type: array
        x-go-name: Names
      responses:
        "200":
          $ref: '#/responses/okResponse'
        default:
          $ref: '#/responses/errResponse'
      security:
      - api_key: []
      summary: Batch delete user.
      tags:
      - users
    get:
      description: List users.
      operationId: listUserRequest
      parameters:
      - description: |-
          Kind is a string value representing the REST resource this object represents.
          Servers may infer this from the endpoint the client submits requests to.
          Cannot be updated.
          In CamelCase.
        in: query
        name: kind
        type: string
        x-go-name: Kind
      - description: |-
          APIVersion defines the versioned schema of this representation of an object.
          Servers should convert recognized schemas to the latest internal value, and
          may reject unrecognized values.
        in: query
        name: apiVersion
        type: string
        x-go-name: APIVersion
      - description: LabelSelector is used to find matching REST resources.
        in: query
        name: labelSelector
        type: string
        x-go-name: LabelSelector
      - description: FieldSelector restricts the list of returned objects by their
          fields. Defaults to everything.
        in: query
        name: fieldSelector
        type: string
        x-go-name: FieldSelector
      - description: TimeoutSeconds specifies the seconds of ClientIP type session
          sticky time.
        format: int64
        in: query
        name: timeoutSeconds
        type: integer
        x-go-name: TimeoutSeconds
      - description: Offset specify the number of records to skip before starting
          to return the records.
        format: int64
        in: query
        name: offset
        type: integer
        x-go-name: Offset
      - description: Limit specify the number of records to be retrieved.
        format: int64
        in: query
        name: limit
        type: integer
        x-go-name: Limit
      responses:
        "200":
          $ref: '#/responses/listUserResponse'
        default:
          $ref: '#/responses/errResponse'
      summary: List users.
      tags:
      - users
    post:
      description: Create users according to input parameters.
      operationId: createUserRequest
      parameters:
      - description: User information.
        in: body
        name: Body
        schema:
          $ref: '#/definitions/User'
      responses:
        "200":
          $ref: '#/responses/createUserResponse'
        default:
          $ref: '#/responses/errResponse'
      security:
      - api_key: []
      summary: Create users.
      tags:
      - users
  /users/{name}:
    delete:
      description: Delete user according to input parameters.
      operationId: deleteUserRequest
      parameters:
      - description: User name.
        in: path
        name: name
        required: true
        type: string
        x-go-name: Name
      responses:
        "200":
          $ref: '#/responses/okResponse'
        default:
          $ref: '#/responses/errResponse'
      summary: Delete user.
      tags:
      - users
    get:
      description: Get details for specified user according to input parameters.
      operationId: getUserRequest
      parameters:
      - description: User name.
        in: path
        name: name
        required: true
        type: string
        x-go-name: Name
      responses:
        "200":
          $ref: '#/responses/getUserResponse'
        default:
          $ref: '#/responses/errResponse'
      summary: Get details for specified user.
      tags:
      - users
    put:
      description: Update user according to input parameters.
      operationId: updateUserRequest
      parameters:
      - description: User information.
        in: body
        name: Body
        schema:
          $ref: '#/definitions/User'
      - description: User name.
        in: path
        name: name
        required: true
        type: string
        x-go-name: Name
      responses:
        "200":
          $ref: '#/responses/updateUserResponse'
        default:
          $ref: '#/responses/errResponse'
      security:
      - api_key: []
      summary: Update user.
      tags:
      - users
  /users/{name}/change_password:
    put:
      description: Change user password.
      operationId: changePasswordRequest
      parameters:
      - description: The name of user.
        in: path
        name: name
        required: true
        type: string
        x-go-name: Name
      - in: body
        name: Body
        schema:
          $ref: '#/definitions/ChangePasswordRequest'
      responses:
        "200":
          $ref: '#/responses/okResponse'
        default:
          $ref: '#/responses/errResponse'
      security:
      - api_key: []
      summary: Change user password.
      tags:
      - users
produces:
- application/json
responses:
  createPolicyResponse:
    description: Policy response.
    schema:
      $ref: '#/definitions/Policy'
  createSecretResponse:
    description: Secret response.
    schema:
      $ref: '#/definitions/Secret'
  createUserResponse:
    description: User response.
    schema:
      $ref: '#/definitions/User'
  errResponse:
    description: ErrResponse defines the return messages when an error occurred.
    schema:
      $ref: '#/definitions/ErrResponse'
  getPolicyResponse:
    description: Policy response.
    schema:
      $ref: '#/definitions/Policy'
  getSecretResponse:
    description: Secret response.
    schema:
      $ref: '#/definitions/Secret'
  getUserResponse:
    description: User response.
    schema:
      $ref: '#/definitions/User'
  listPolicyResponse:
    description: List policies response.
    schema:
      $ref: '#/definitions/PolicyList'
  listSecretResponse:
    description: List secrets response.
    schema:
      $ref: '#/definitions/SecretList'
  listUserResponse:
    description: List users response.
    schema:
      $ref: '#/definitions/UserList'
  okResponse:
    description: Return nil json object.
  updatePolicyResponse:
    description: Policy response.
    schema:
      $ref: '#/definitions/Policy'
  updateSecretResponse:
    description: Secret response.
    schema:
      $ref: '#/definitions/Secret'
  updateUserResponse:
    description: User response.
    schema:
      $ref: '#/definitions/User'
schemes:
- http
- https
securityDefinitions:
  api_key:
    in: header
    name: Authorization
    type: apiKey
  basic:
    type: basic
swagger: "2.0"
